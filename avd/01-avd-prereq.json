{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.1124.51302",
      "templateHash": "17856993167649469121"
    }
  },
  "parameters": {
    "templateResourceGroup": {
      "type": "string",
      "defaultValue": "rg-prod-eus-avdtemplates",
      "metadata": {
        "description": "Name of resource group to create Template Spec"
      }
    },
    "avdResourceGroup": {
      "type": "string",
      "defaultValue": "rg-prod-eus-avdresources",
      "metadata": {
        "description": "Name of resource group to hold HostPools, Application Groups, and Workspaces"
      }
    },
    "managedIdentityName": {
      "type": "string",
      "defaultValue": "uai-prod-eus-imagebuilder",
      "metadata": {
        "description": "Name for managed identity used for Azure Image Builder"
      }
    },
    "computeGalleryName": {
      "type": "string",
      "defaultValue": "acg_prod_eus_avd",
      "metadata": {
        "description": "Name for Azure Compute Gallery"
      }
    },
    "imageRegionReplicas": {
      "type": "array",
      "defaultValue": [
        "EastUs"
      ]
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "kv-prod-eus-avd",
      "maxLength": 18,
      "metadata": {
        "description": "Name of Key Vault used for AVD deployment secrets"
      }
    },
    "objectId": {
      "type": "string",
      "metadata": {
        "description": "AAD object ID of security principal to grant Key Vault access"
      }
    },
    "createVmRole": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Create custom Start VM on Connect Role"
      }
    },
    "createAibRole": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Create custom Azure Image Builder Role"
      }
    },
    "time": {
      "type": "string",
      "defaultValue": "[utcNow()]",
      "metadata": {
        "description": "Do not modify, used to set unique value for resource deployment"
      }
    }
  },
  "variables": {
    "startVmRoleDef": "[json('{\r\n    \"Name\": \"Start VM on connect (Custom)\",\r\n    \"IsCustom\": true,\r\n    \"Description\": \"Start VM on connect with AVD (Custom)\",\r\n    \"Actions\": [\r\n      \"Microsoft.Compute/virtualMachines/start/action\",\r\n      \"Microsoft.Compute/virtualMachines/*/read\"\r\n    ],\r\n    \"NotActions\": [],\r\n    \"DataActions\": [],\r\n    \"NotDataActions\": [],\r\n    \"AssignableScopes\": [\r\n      \r\n    ]\r\n  }')]",
    "aibRoleDef": "[json('{\r\n    \"Name\": \"Azure Image Builder (Custom)\",\r\n    \"IsCustom\": true,\r\n    \"Description\": \"Azure Image Builder (Custom)\",\r\n    \"Actions\": [\r\n      \"Microsoft.Compute/images/write\",\r\n      \"Microsoft.Compute/images/read\",\r\n      \"Microsoft.Compute/images/delete\",\r\n      \"Microsoft.Compute/galleries/read\",\r\n      \"Microsoft.Compute/galleries/images/read\",\r\n      \"Microsoft.Compute/galleries/images/versions/read\",\r\n      \"Microsoft.Compute/galleries/images/versions/write\",\r\n      \"Microsoft.Storage/storageAccounts/blobServices/containers/read\",\r\n      \"Microsoft.Storage/storageAccounts/blobServices/containers/write\",\r\n      \"Microsoft.ContainerInstance/containerGroups/read\",\r\n      \"Microsoft.ContainerInstance/containerGroups/write\",\r\n      \"Microsoft.ContainerInstance/containerGroups/start/action\",\r\n      \"Microsoft.Resources/deployments/read\",\r\n      \"Microsoft.Resources/deploymentScripts/read\",\r\n      \"Microsoft.Resources/deploymentScripts/write\",\r\n      \"Microsoft.VirtualMachineImages/imageTemplates/run/action\"      \r\n    ],\r\n    \"NotActions\": [],\r\n    \"DataActions\": [],\r\n    \"NotDataActions\": [],\r\n    \"AssignableScopes\": [\r\n      \r\n    ]\r\n  }')]",
    "aibSecret": "aibscriptsastoken",
    "storageName": "[format('aibscripts{0}', take(guid(subscription().subscriptionId), 8))]",
    "vdiImages": [
      "[json('{\r\n    \"name\": \"Windows10_20H2_Office\",\r\n    \"osType\": \"Windows\",\r\n    \"osState\": \"Generalized\",\r\n    \"offer\": \"office-365\",\r\n    \"publisher\": \"MicrosoftWindowsDesktop\",\r\n    \"sku\": \"20h2-evd-o365pp\"\r\n}')]",
      "[json('{\r\n    \"name\": \"Windows10_20H2\",\r\n    \"osType\": \"Windows\",\r\n    \"osState\": \"Generalized\",\r\n    \"offer\": \"Windows-10\",\r\n    \"publisher\": \"MicrosoftWindowsDesktop\",\r\n    \"sku\": \"20h2-evd\"\r\n}')]"
    ]
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[parameters('templateResourceGroup')]",
      "location": "[deployment().location]"
    },
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[parameters('avdResourceGroup')]",
      "location": "[deployment().location]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('avdkv-{0}', parameters('time'))]",
      "resourceGroup": "[parameters('avdResourceGroup')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "keyVaultName": {
            "value": "[parameters('keyVaultName')]"
          },
          "objectId": {
            "value": "[parameters('objectId')]"
          },
          "enabledForDiskEncryption": {
            "value": true
          },
          "enabledForTemplateDeployment": {
            "value": true
          },
          "principalType": {
            "value": "User"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1124.51302",
              "templateHash": "1507245306556498420"
            }
          },
          "parameters": {
            "keyVaultName": {
              "type": "string",
              "maxLength": 18,
              "metadata": {
                "description": "Specifies the name of the key vault."
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Specifies the Azure location where the key vault should be created."
              }
            },
            "skuName": {
              "type": "string",
              "defaultValue": "standard",
              "allowedValues": [
                "standard",
                "premium"
              ],
              "metadata": {
                "description": "Specifies whether the key vault is a standard vault or a premium vault."
              }
            },
            "enabledForDeployment": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Specifies whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault."
              }
            },
            "enabledForDiskEncryption": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Specifies whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys."
              }
            },
            "enabledForTemplateDeployment": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Specifies whether Azure Resource Manager is permitted to retrieve secrets from the key vault."
              }
            },
            "tenantId": {
              "type": "string",
              "defaultValue": "[subscription().tenantId]",
              "metadata": {
                "description": "Specifies the Azure Active Directory tenant ID that should be used for authenticating requests to the key vault. Get it by using Get-AzSubscription cmdlet."
              }
            },
            "objectId": {
              "type": "string",
              "metadata": {
                "description": "Specifies the object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies. Get it by using Get-AzADUser or Get-AzADServicePrincipal cmdlets."
              }
            },
            "roleName": {
              "type": "string",
              "defaultValue": "Key Vault Administrator",
              "allowedValues": [
                "Key Vault Administrator",
                "Key Vault Certificates Officer",
                "Key Vault Crypto Officer",
                "Key Vault Crypto Service Encryption User",
                "Key Vault Crypto User",
                "Key Vault Reader",
                "Key Vault Secrets Officer",
                "Key Vault Secrets User"
              ],
              "metadata": {
                "description": "Specifies the role the user will get with the secret in the vault. Valid values are: Key Vault Administrator, Key Vault Certificates Officer, Key Vault Crypto Officer, Key Vault Crypto Service Encryption User, Key Vault Crypto User, Key Vault Reader, Key Vault Secrets Officer, Key Vault Secrets User."
              }
            },
            "principalType": {
              "type": "string",
              "metadata": {
                "description": "Type of security principal for access to Key Vault"
              },
              "allowedValues": [
                "Group",
                "ServicePrincipal",
                "User"
              ]
            }
          },
          "variables": {
            "roleIdMapping": {
              "Key Vault Administrator": "00482a5a-887f-4fb3-b363-3b7fe8e74483",
              "Key Vault Certificates Officer": "a4417e6f-fecd-4de8-b567-7b0420556985",
              "Key Vault Crypto Officer": "14b46e9e-c2b7-41b4-b07b-48a6ebf60603",
              "Key Vault Crypto Service Encryption User": "e147488a-f6f5-4113-8e2d-b22465e65bf6",
              "Key Vault Crypto User": "12338af0-0e69-4776-bea7-57ae8d297424",
              "Key Vault Reader": "21090545-7ca7-4776-b22c-e363652d74d2",
              "Key Vault Secrets Officer": "b86a8fe4-44ce-4948-aee5-eccb2c155cd7",
              "Key Vault Secrets User": "4633458b-17de-408a-b874-0445c86b69e6"
            },
            "kvUniqueLength": "[sub(24, length(parameters('keyVaultName')))]",
            "kvUniqueName": "[format('{0}{1}', parameters('keyVaultName'), take(uniqueString(parameters('keyVaultName')), variables('kvUniqueLength')))]"
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2021-04-01-preview",
              "name": "[variables('kvUniqueName')]",
              "location": "[parameters('location')]",
              "properties": {
                "enabledForDeployment": "[parameters('enabledForDeployment')]",
                "enabledForDiskEncryption": "[parameters('enabledForDiskEncryption')]",
                "enabledForTemplateDeployment": "[parameters('enabledForTemplateDeployment')]",
                "enableRbacAuthorization": true,
                "tenantId": "[parameters('tenantId')]",
                "sku": {
                  "name": "[parameters('skuName')]",
                  "family": "A"
                },
                "networkAcls": {
                  "defaultAction": "Deny",
                  "bypass": "AzureServices"
                }
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "scope": "[format('Microsoft.KeyVault/vaults/{0}', variables('kvUniqueName'))]",
              "name": "[guid(variables('roleIdMapping')[parameters('roleName')], parameters('objectId'), resourceId('Microsoft.KeyVault/vaults', variables('kvUniqueName')))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('roleIdMapping')[parameters('roleName')])]",
                "principalId": "[parameters('objectId')]",
                "principalType": "[parameters('principalType')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('kvUniqueName'))]"
              ]
            }
          ],
          "outputs": {
            "keyVaultResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.KeyVault/vaults', variables('kvUniqueName'))]"
            },
            "keyVaultName": {
              "type": "string",
              "value": "[variables('kvUniqueName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('avdResourceGroup'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('scriptSas-{0}', parameters('time'))]",
      "resourceGroup": "[parameters('avdResourceGroup')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "keyVaultName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('avdResourceGroup')), 'Microsoft.Resources/deployments', format('avdkv-{0}', parameters('time'))), '2020-10-01').outputs.keyVaultName.value]"
          },
          "secretName": {
            "value": "[variables('aibSecret')]"
          },
          "secretValue": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('avdResourceGroup')), 'Microsoft.Resources/deployments', format('vdiscript-{0}', parameters('time'))), '2020-10-01').outputs.scriptUri.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1124.51302",
              "templateHash": "17657976681018592820"
            }
          },
          "parameters": {
            "secretName": {
              "type": "string",
              "metadata": {
                "description": "Name of the secret to store in Key Vault"
              }
            },
            "secretValue": {
              "type": "secureString",
              "metadata": {
                "description": "Value of the secret to store in Key Vault"
              }
            },
            "keyVaultName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-06-01-preview",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('secretName'))]",
              "properties": {
                "value": "[parameters('secretValue')]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('avdResourceGroup'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('avdResourceGroup')), 'Microsoft.Resources/deployments', format('avdkv-{0}', parameters('time')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('avdResourceGroup')), 'Microsoft.Resources/deployments', format('vdiscript-{0}', parameters('time')))]"
      ]
    },
    {
      "condition": "[equals(parameters('createVmRole'), true())]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('startVmRole-{0}', parameters('time'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "roleDefinition": {
            "value": "[variables('startVmRoleDef')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1124.51302",
              "templateHash": "1126659739435272093"
            }
          },
          "parameters": {
            "roleDefinition": {
              "type": "object"
            }
          },
          "variables": {
            "roleId": "[guid(parameters('roleDefinition').Name, subscription().id)]"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleDefinitions",
              "apiVersion": "2018-01-01-preview",
              "name": "[variables('roleId')]",
              "properties": {
                "permissions": [
                  {
                    "actions": "[parameters('roleDefinition').Actions]"
                  }
                ],
                "assignableScopes": [
                  "[subscription().id]"
                ],
                "roleName": "[parameters('roleDefinition').Name]",
                "description": "[parameters('roleDefinition').Description]"
              }
            }
          ],
          "outputs": {
            "roleId": {
              "type": "string",
              "value": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('roleId'))]"
            }
          }
        }
      }
    },
    {
      "condition": "[equals(parameters('createAibRole'), true())]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('aibRole-{0}', parameters('time'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "roleDefinition": {
            "value": "[variables('aibRoleDef')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1124.51302",
              "templateHash": "1126659739435272093"
            }
          },
          "parameters": {
            "roleDefinition": {
              "type": "object"
            }
          },
          "variables": {
            "roleId": "[guid(parameters('roleDefinition').Name, subscription().id)]"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleDefinitions",
              "apiVersion": "2018-01-01-preview",
              "name": "[variables('roleId')]",
              "properties": {
                "permissions": [
                  {
                    "actions": "[parameters('roleDefinition').Actions]"
                  }
                ],
                "assignableScopes": [
                  "[subscription().id]"
                ],
                "roleName": "[parameters('roleDefinition').Name]",
                "description": "[parameters('roleDefinition').Description]"
              }
            }
          ],
          "outputs": {
            "roleId": {
              "type": "string",
              "value": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('roleId'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('identity-{0}', parameters('time'))]",
      "resourceGroup": "[parameters('avdResourceGroup')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "identityName": {
            "value": "[parameters('managedIdentityName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1124.51302",
              "templateHash": "3750546418274993426"
            }
          },
          "parameters": {
            "identityName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2018-11-30",
              "name": "[parameters('identityName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]"
            }
          ],
          "outputs": {
            "identityResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName'))]"
            },
            "identityPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName'))).principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('avdResourceGroup'))]"
      ]
    },
    {
      "condition": "[equals(parameters('createAibRole'), true())]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('assignAib-{0}', parameters('time'))]",
      "resourceGroup": "[parameters('avdResourceGroup')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('avdResourceGroup')), 'Microsoft.Resources/deployments', format('identity-{0}', parameters('time'))), '2020-10-01').outputs.identityPrincipalId.value]"
          },
          "roleDefinitionId": {
            "value": "[split(reference(subscriptionResourceId('Microsoft.Resources/deployments', format('aibRole-{0}', parameters('time'))), '2020-10-01').outputs.roleId.value, '/')[6]]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1124.51302",
              "templateHash": "16394492167322225165"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "roleDefinitionId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "User",
                "ServicePrincipal",
                "Group",
                "MSI"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-08-01-preview",
              "name": "[guid(parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "roleDefinitionId": "[format('/providers/Microsoft.Authorization/roleDefinitions/{0}', parameters('roleDefinitionId'))]",
                "principalType": "[parameters('principalType')]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('aibRole-{0}', parameters('time')))]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('avdResourceGroup'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('avdResourceGroup')), 'Microsoft.Resources/deployments', format('identity-{0}', parameters('time')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('gallery-{0}', parameters('time'))]",
      "resourceGroup": "[parameters('avdResourceGroup')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "galleryName": {
            "value": "[parameters('computeGalleryName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1124.51302",
              "templateHash": "18204121135288503673"
            }
          },
          "parameters": {
            "galleryName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Compute/galleries",
              "apiVersion": "2021-07-01",
              "name": "[parameters('galleryName')]",
              "location": "[parameters('location')]"
            }
          ],
          "outputs": {
            "galleryId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Compute/galleries', parameters('galleryName'))]"
            },
            "galleryName": {
              "type": "string",
              "value": "[parameters('galleryName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('avdResourceGroup'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('vdiscript-{0}', parameters('time'))]",
      "resourceGroup": "[parameters('avdResourceGroup')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "storageAccountName": {
            "value": "[variables('storageName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1124.51302",
              "templateHash": "10012414999460823060"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "defaultValue": "uploadVdiOptimizerScript"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "storageAccountName": {
              "type": "string"
            },
            "time": {
              "type": "string",
              "defaultValue": "[utcNow('yyyy-MM-ddTHH:mm:ssZ')]"
            }
          },
          "variables": {
            "add1Hour": "[dateTimeAdd(parameters('time'), 'PT1H')]",
            "add1Day": "[dateTimeAdd(parameters('time'), 'P1D')]",
            "sasReadProperties": {
              "canonicalizedResource": "[format('/blob/{0}/aibscripts', parameters('storageAccountName'))]",
              "signedProtocol": "https",
              "signedServices": "b",
              "signedPermission": "lr",
              "signedExpiry": "[variables('add1Day')]",
              "signedResourceTypes": "co"
            },
            "sasWriteProperties": {
              "canonicalizedResource": "[format('/blob/{0}/aibscripts', parameters('storageAccountName'))]",
              "signedProtocol": "https",
              "signedServices": "b",
              "signedPermission": "lwr",
              "signedExpiry": "[variables('add1Hour')]",
              "signedResourceTypes": "co"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-06-01",
              "name": "[parameters('storageAccountName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard_GRS"
              },
              "kind": "StorageV2",
              "properties": {
                "allowBlobPublicAccess": false,
                "minimumTlsVersion": "TLS1_2"
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2021-06-01",
              "name": "[format('{0}/default/aibscripts', parameters('storageAccountName'))]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2020-10-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "kind": "AzurePowerShell",
              "properties": {
                "azPowerShellVersion": "6.0",
                "retentionInterval": "P1D",
                "forceUpdateTag": "[parameters('time')]",
                "timeout": "PT15M",
                "arguments": "[format('-storageName ''{0}'' -sasToken ''{1}''', parameters('storageAccountName'), listAccountSas(parameters('storageAccountName'), '2021-06-01', variables('sasWriteProperties')).accountSasToken)]",
                "scriptContent": "      param(\r\n        [string] [Parameter(Mandatory=$true)] $storageName,\r\n        [string] [Parameter(Mandatory=$true)] $sasToken\r\n        )\r\n      \r\n      $uri            = \"https://$storageName.blob.core.windows.net/aibscripts/script-vdi-optimize.ps1?$sasToken\"\r\n      $vdiScriptUri   = \"https://raw.githubusercontent.com/edm-ms/poc/em-initial/avd/Parameters/script-vdi-optimize.ps1\"\r\n      $file           = Invoke-RestMethod -Uri $vdiScriptUri -Method Get\r\n\r\n      $headers = @{\r\n        'x-ms-blob-type' = 'BlockBlob'\r\n      }\r\n      \r\n      Invoke-RestMethod -Uri $uri -Method Put -Headers $headers -Body $file\r\n    "
              }
            }
          ],
          "outputs": {
            "scriptId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Resources/deploymentScripts', parameters('name'))]"
            },
            "scriptUri": {
              "type": "string",
              "value": "[format('https://{0}.blob.core.windows.net/aibscripts/script-vdi-optimize.ps1?{1}', parameters('storageAccountName'), listAccountSas(parameters('storageAccountName'), '2021-06-01', variables('sasReadProperties')).accountSasToken)]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('avdResourceGroup'))]"
      ]
    },
    {
      "copy": {
        "name": "imageDefinitions",
        "count": "[length(range(0, length(variables('vdiImages'))))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('image{0}-{1}', range(0, length(variables('vdiImages')))[copyIndex()], parameters('time'))]",
      "resourceGroup": "[parameters('avdResourceGroup')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "sku": {
            "value": "[variables('vdiImages')[range(0, length(variables('vdiImages')))[copyIndex()]].sku]"
          },
          "osType": {
            "value": "[variables('vdiImages')[range(0, length(variables('vdiImages')))[copyIndex()]].osType]"
          },
          "osState": {
            "value": "[variables('vdiImages')[range(0, length(variables('vdiImages')))[copyIndex()]].osState]"
          },
          "imageGalleryName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('avdResourceGroup')), 'Microsoft.Resources/deployments', format('gallery-{0}', parameters('time'))), '2020-10-01').outputs.galleryName.value]"
          },
          "imageName": {
            "value": "[variables('vdiImages')[range(0, length(variables('vdiImages')))[copyIndex()]].name]"
          },
          "offer": {
            "value": "[variables('vdiImages')[range(0, length(variables('vdiImages')))[copyIndex()]].offer]"
          },
          "publisher": {
            "value": "[variables('vdiImages')[range(0, length(variables('vdiImages')))[copyIndex()]].publisher]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1124.51302",
              "templateHash": "3258233961787286422"
            }
          },
          "parameters": {
            "imageName": {
              "type": "string"
            },
            "imageGalleryName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "osType": {
              "type": "string"
            },
            "osState": {
              "type": "string"
            },
            "offer": {
              "type": "string"
            },
            "publisher": {
              "type": "string"
            },
            "sku": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Compute/galleries/images",
              "apiVersion": "2021-07-01",
              "name": "[format('{0}/{1}', parameters('imageGalleryName'), parameters('imageName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "osType": "[parameters('osType')]",
                "osState": "[parameters('osState')]",
                "identifier": {
                  "offer": "[parameters('offer')]",
                  "publisher": "[parameters('publisher')]",
                  "sku": "[parameters('sku')]"
                }
              }
            }
          ],
          "outputs": {
            "imageId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Compute/galleries/images', parameters('imageGalleryName'), parameters('imageName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('avdResourceGroup'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('avdResourceGroup')), 'Microsoft.Resources/deployments', format('gallery-{0}', parameters('time')))]"
      ]
    },
    {
      "copy": {
        "name": "imageBuildDefinitions",
        "count": "[length(range(0, length(variables('vdiImages'))))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('aib{0}-{1}', range(0, length(variables('vdiImages')))[copyIndex()], parameters('time'))]",
      "resourceGroup": "[parameters('avdResourceGroup')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "sku": {
            "value": "[variables('vdiImages')[range(0, length(variables('vdiImages')))[copyIndex()]].sku]"
          },
          "imageId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('avdResourceGroup')), 'Microsoft.Resources/deployments', format('image{0}-{1}', range(0, length(variables('vdiImages')))[range(0, length(variables('vdiImages')))[copyIndex()]], parameters('time'))), '2020-10-01').outputs.imageId.value]"
          },
          "imageName": {
            "value": "[variables('vdiImages')[range(0, length(variables('vdiImages')))[copyIndex()]].name]"
          },
          "imageRegions": {
            "value": "[parameters('imageRegionReplicas')]"
          },
          "offer": {
            "value": "[variables('vdiImages')[range(0, length(variables('vdiImages')))[copyIndex()]].offer]"
          },
          "managedIdentityId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('avdResourceGroup')), 'Microsoft.Resources/deployments', format('identity-{0}', parameters('time'))), '2020-10-01').outputs.identityResourceId.value]"
          },
          "publisher": {
            "value": "[variables('vdiImages')[range(0, length(variables('vdiImages')))[copyIndex()]].publisher]"
          },
          "scriptUri": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('avdResourceGroup')), 'Microsoft.Resources/deployments', format('vdiscript-{0}', parameters('time'))), '2020-10-01').outputs.scriptUri.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1124.51302",
              "templateHash": "13406591021522587303"
            }
          },
          "parameters": {
            "scriptUri": {
              "type": "string"
            },
            "imageRegions": {
              "type": "array"
            },
            "imageName": {
              "type": "string"
            },
            "imageId": {
              "type": "string"
            },
            "managedIdentityId": {
              "type": "string"
            },
            "publisher": {
              "type": "string"
            },
            "offer": {
              "type": "string"
            },
            "sku": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.VirtualMachineImages/imageTemplates",
              "apiVersion": "2020-02-14",
              "name": "[parameters('imageName')]",
              "location": "[resourceGroup().location]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('managedIdentityId'))]": {}
                }
              },
              "properties": {
                "buildTimeoutInMinutes": 120,
                "source": {
                  "type": "PlatformImage",
                  "publisher": "[parameters('publisher')]",
                  "offer": "[parameters('offer')]",
                  "sku": "[parameters('sku')]",
                  "version": "latest"
                },
                "customize": [
                  {
                    "type": "PowerShell",
                    "name": "Install Software",
                    "scriptUri": "[parameters('scriptUri')]"
                  },
                  {
                    "type": "WindowsUpdate",
                    "searchCriteria": "IsInstalled=0",
                    "filters": [
                      "exclude:$_.Title -like \"*Preview*\"",
                      "include:$true"
                    ],
                    "updateLimit": 45
                  }
                ],
                "vmProfile": {
                  "osDiskSizeGB": 128,
                  "vmSize": "Standard_D2s_v4"
                },
                "distribute": [
                  {
                    "type": "SharedImage",
                    "runOutputName": "myimage",
                    "replicationRegions": "[parameters('imageRegions')]",
                    "galleryImageId": "[parameters('imageId')]"
                  }
                ]
              }
            }
          ],
          "outputs": {
            "aibImageId": {
              "type": "string",
              "value": "[resourceId('Microsoft.VirtualMachineImages/imageTemplates', parameters('imageName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('avdResourceGroup'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('avdResourceGroup')), 'Microsoft.Resources/deployments', format('identity-{0}', parameters('time')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('avdResourceGroup')), 'Microsoft.Resources/deployments', format('image{0}-{1}', range(0, length(variables('vdiImages')))[range(0, length(variables('vdiImages')))[copyIndex()]], parameters('time')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('avdResourceGroup')), 'Microsoft.Resources/deployments', format('vdiscript-{0}', parameters('time')))]"
      ]
    }
  ]
}