{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
      "_generator": {
        "name": "bicep",
        "version": "0.4.1124.51302",
        "templateHash": "15896872646396638860"
      }
    },
    "parameters": {
      "name": {
        "type": "string",
        "minLength": 1,
        "metadata": {
          "description": "Required. Name of the Host Pool"
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Optional. Location for all resources."
        }
      },
      "hostpoolFriendlyName": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "Optional. The friendly name of the Host Pool to be created."
        }
      },
      "hostpoolDescription": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "Optional. The description of the Host Pool to be created."
        }
      },
      "hostpoolType": {
        "type": "string",
        "defaultValue": "Pooled",
        "allowedValues": [
          "Personal",
          "Pooled"
        ],
        "metadata": {
          "description": "Optional. Set this parameter to Personal if you would like to enable Persistent Desktop experience. Defaults to Pooled."
        }
      },
      "personalDesktopAssignmentType": {
        "type": "string",
        "defaultValue": "",
        "allowedValues": [
          "Automatic",
          "Direct",
          ""
        ],
        "metadata": {
          "description": "Optional. Set the type of assignment for a Personal Host Pool type"
        }
      },
      "loadBalancerType": {
        "type": "string",
        "defaultValue": "BreadthFirst",
        "allowedValues": [
          "BreadthFirst",
          "DepthFirst",
          "Persistent"
        ],
        "metadata": {
          "description": "Optional. Type of load balancer algorithm."
        }
      },
      "maxSessionLimit": {
        "type": "int",
        "defaultValue": 99999,
        "metadata": {
          "description": "Optional. Maximum number of sessions."
        }
      },
      "customRdpProperty": {
        "type": "string",
        "defaultValue": "audiocapturemode:i:1;audiomode:i:0;drivestoredirect:s:;redirectclipboard:i:1;redirectcomports:i:1;redirectprinters:i:1;redirectsmartcards:i:1;screen mode id:i:2;",
        "metadata": {
          "description": "Optional. Host Pool RDP properties"
        }
      },
      "validationEnviroment": {
        "type": "bool",
        "defaultValue": false,
        "metadata": {
          "description": "Optional. Whether to use validation enviroment. When set to true, the Host Pool will be deployed in a validation 'ring' (environment) that receives all the new features (might be less stable). Ddefaults to false that stands for the stable, production-ready environment."
        }
      },
      "vmTemplate": {
        "type": "object",
        "defaultValue": {},
        "metadata": {
          "description": "Optional. The necessary information for adding more VMs to this Host Pool."
        }
      },
      "tokenValidityLength": {
        "type": "string",
        "defaultValue": "PT8H",
        "metadata": {
          "description": "Optional. Host Pool token validity length. Usage: 'PT8H' - valid for 8 hours; 'P5D' - valid for 5 days; 'P1Y' - valid for 1 year. When not provided, the token will be valid for 8 hours."
        }
      },
      "baseTime": {
        "type": "string",
        "defaultValue": "[utcNow('u')]",
        "metadata": {
          "description": "Generated. Do not provide a value! This date value is used to generate a registration token."
        }
      },
      "diagnosticLogsRetentionInDays": {
        "type": "int",
        "defaultValue": 365,
        "maxValue": 365,
        "minValue": 0,
        "metadata": {
          "description": "Optional. Specifies the number of days that logs will be kept for; a value of 0 will retain data indefinitely."
        }
      },
      "diagnosticStorageAccountId": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "Optional. Resource ID of the diagnostic storage account."
        }
      },
      "workspaceId": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "Optional. Resource ID of log analytics."
        }
      },
      "eventHubAuthorizationRuleId": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "Optional. Resource ID of the event hub authorization rule for the Event Hubs namespace in which the event hub should be created or streamed to."
        }
      },
      "eventHubName": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "Optional. Name of the event hub within the namespace to which logs are streamed. Without this, an event hub is created for each log category."
        }
      },
      "lock": {
        "type": "string",
        "defaultValue": "NotSpecified",
        "metadata": {
          "description": "Optional. Specify the type of lock."
        },
        "allowedValues": [
          "CanNotDelete",
          "NotSpecified",
          "ReadOnly"
        ]
      },
      "tags": {
        "type": "object",
        "defaultValue": {},
        "metadata": {
          "description": "Optional. Tags of the resource."
        }
      },
      "preferredAppGroupType": {
        "type": "string",
        "defaultValue": "Desktop",
        "allowedValues": [
          "Desktop",
          "None",
          "RailApplications"
        ],
        "metadata": {
          "description": "Optional. The type of preferred application group type, default to Desktop Application Group"
        }
      },
      "startVMOnConnect": {
        "type": "bool",
        "defaultValue": false,
        "metadata": {
          "description": "Optional. Enable Start VM on connect to allow users to start the virtual machine from a deallocated state. Important: Custom RBAC role required to power manage VMs."
        }
      },
      "validationEnvironment": {
        "type": "bool",
        "defaultValue": false,
        "metadata": {
          "description": "Optional. Validation host pool allows you to test service changes before they are deployed to production."
        }
      },
      "logsToEnable": {
        "type": "array",
        "defaultValue": [
          "Checkpoint",
          "Error",
          "Management",
          "Connection",
          "HostRegistration",
          "AgentHealthStatus"
        ],
        "allowedValues": [
          "Checkpoint",
          "Error",
          "Management",
          "Connection",
          "HostRegistration",
          "AgentHealthStatus"
        ],
        "metadata": {
          "description": "Optional. The name of logs that will be streamed."
        }
      }
    },
    "variables": {
      "copy": [
        {
          "name": "diagnosticsLogs",
          "count": "[length(parameters('logsToEnable'))]",
          "input": {
            "category": "[parameters('logsToEnable')[copyIndex('diagnosticsLogs')]]",
            "enabled": true,
            "retentionPolicy": {
              "enabled": true,
              "days": "[parameters('diagnosticLogsRetentionInDays')]"
            }
          }
        }
      ],
      "tokenExpirationTime": "[dateTimeAdd(parameters('baseTime'), parameters('tokenValidityLength'))]"
    },
    "resources": [
      {
        "type": "Microsoft.DesktopVirtualization/hostPools",
        "apiVersion": "2021-07-12",
        "name": "[parameters('name')]",
        "location": "[parameters('location')]",
        "tags": "[parameters('tags')]",
        "properties": {
          "friendlyName": "[parameters('hostpoolFriendlyName')]",
          "description": "[parameters('hostpoolDescription')]",
          "hostPoolType": "[parameters('hostpoolType')]",
          "customRdpProperty": "[parameters('customRdpProperty')]",
          "personalDesktopAssignmentType": "[parameters('personalDesktopAssignmentType')]",
          "preferredAppGroupType": "[parameters('preferredAppGroupType')]",
          "maxSessionLimit": "[parameters('maxSessionLimit')]",
          "loadBalancerType": "[parameters('loadBalancerType')]",
          "validationEnviroment": "[parameters('validationEnviroment')]",
          "startVMOnConnect": "[parameters('startVMOnConnect')]",
          "validationEnvironment": "[parameters('validationEnvironment')]",
          "registrationInfo": {
            "expirationTime": "[variables('tokenExpirationTime')]",
            "token": null,
            "registrationTokenOperation": "Update"
          },
          "vmTemplate": "[if(not(empty(parameters('vmTemplate'))), null(), string(parameters('vmTemplate')))]"
        }
      },
      {
        "condition": "[not(equals(parameters('lock'), 'NotSpecified'))]",
        "type": "Microsoft.Authorization/locks",
        "apiVersion": "2016-09-01",
        "scope": "[format('Microsoft.DesktopVirtualization/hostPools/{0}', parameters('name'))]",
        "name": "[format('{0}-{1}-lock', parameters('name'), parameters('lock'))]",
        "properties": {
          "level": "[parameters('lock')]",
          "notes": "[if(equals(parameters('lock'), 'CanNotDelete'), 'Cannot delete resource or child resources.', 'Cannot modify the resource or child resources.')]"
        },
        "dependsOn": [
          "[resourceId('Microsoft.DesktopVirtualization/hostPools', parameters('name'))]"
        ]
      },
      {
        "condition": "[or(or(or(not(empty(parameters('diagnosticStorageAccountId'))), not(empty(parameters('workspaceId')))), not(empty(parameters('eventHubAuthorizationRuleId')))), not(empty(parameters('eventHubName'))))]",
        "type": "Microsoft.Insights/diagnosticSettings",
        "apiVersion": "2021-05-01-preview",
        "scope": "[format('Microsoft.DesktopVirtualization/hostPools/{0}', parameters('name'))]",
        "name": "[format('{0}-diagnosticsetting', parameters('name'))]",
        "properties": {
          "storageAccountId": "[if(not(empty(parameters('diagnosticStorageAccountId'))), parameters('diagnosticStorageAccountId'), null())]",
          "workspaceId": "[if(not(empty(parameters('workspaceId'))), parameters('workspaceId'), null())]",
          "eventHubAuthorizationRuleId": "[if(not(empty(parameters('eventHubAuthorizationRuleId'))), parameters('eventHubAuthorizationRuleId'), null())]",
          "eventHubName": "[if(not(empty(parameters('eventHubName'))), parameters('eventHubName'), null())]",
          "logs": "[variables('diagnosticsLogs')]"
        },
        "dependsOn": [
          "[resourceId('Microsoft.DesktopVirtualization/hostPools', parameters('name'))]"
        ]
      }
    ],
    "outputs": {
      "hostPoolResourceId": {
        "type": "string",
        "value": "[resourceId('Microsoft.DesktopVirtualization/hostPools', parameters('name'))]",
        "metadata": {
          "description": "The resource ID of the AVD host pool"
        }
      },
      "hostPoolResourceGroup": {
        "type": "string",
        "value": "[resourceGroup().name]",
        "metadata": {
          "description": "The resource group the AVD host pool was deployed into"
        }
      },
      "hostPoolName": {
        "type": "string",
        "value": "[parameters('name')]",
        "metadata": {
          "description": "The name of the AVD host pool"
        }
      },
      "tokenExpirationTime": {
        "type": "string",
        "value": "[dateTimeAdd(parameters('baseTime'), parameters('tokenValidityLength'))]",
        "metadata": {
          "description": "The expiration time for the registration token"
        }
      }
    }
  }