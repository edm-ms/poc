{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.1272.37030",
      "templateHash": "17720682194648483112"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[deployment().location]"
    },
    "requiredTags": {
      "type": "array",
      "defaultValue": [
        {
          "tagName": "Application Owner",
          "inheritTag": true
        },
        {
          "tagName": "Application Name",
          "inheritTag": false
        },
        {
          "tagName": "Criticality",
          "inheritTag": true
        },
        {
          "tagName": "Contact Email",
          "inheritTag": true
        },
        {
          "tagName": "Data Classification",
          "inheritTag": false
        }
      ]
    }
  },
  "variables": {
    "inheritTag": "/providers/Microsoft.Authorization/policyDefinitions/cd3aa116-8754-49c9-a813-ad46512ece54",
    "requireTag": "/providers/Microsoft.Authorization/policyDefinitions/96670d01-0a4d-4649-9c89-2d3abc0a5025",
    "tagContributor": "/providers/Microsoft.Authorization/roleDefinitions/4a9ae827-6dc8-4573-8ac7-8239d42aa03f"
  },
  "resources": [
    {
      "copy": {
        "name": "requiredTagPolicy",
        "count": "[length(range(0, length(parameters('requiredTags'))))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('requireTag-{0}', replace(parameters('requiredTags')[range(0, length(parameters('requiredTags')))[copyIndex()]].tagname, ' ', ''))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parameters": {
            "value": {
              "tagName": {
                "value": "[parameters('requiredTags')[range(0, length(parameters('requiredTags')))[copyIndex()]].tagname]"
              }
            }
          },
          "policyId": {
            "value": "[variables('requireTag')]"
          },
          "assignmentName": {
            "value": "[uniqueString(parameters('requiredTags')[range(0, length(parameters('requiredTags')))[copyIndex()]].tagname, managementGroup().id, variables('requireTag'))]"
          },
          "nonComplianceMessage": {
            "value": "[format('Supply the tag and value for: {0}', parameters('requiredTags')[range(0, length(parameters('requiredTags')))[copyIndex()]].tagname)]"
          },
          "displayName": {
            "value": "[format('Require {0} tag for Resource Groups', parameters('requiredTags')[range(0, length(parameters('requiredTags')))[copyIndex()]].tagname)]"
          },
          "enforcementMode": {
            "value": "Default"
          },
          "description": {
            "value": "[format('Require {0} tag for Resource Groups', parameters('requiredTags')[range(0, length(parameters('requiredTags')))[copyIndex()]].tagname)]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "11689312794434857792"
            }
          },
          "parameters": {
            "policyId": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[deployment().location]"
            },
            "nonComplianceMessage": {
              "type": "string"
            },
            "assignmentName": {
              "type": "string",
              "maxLength": 24
            },
            "parameters": {
              "type": "object"
            },
            "enforcementMode": {
              "type": "string",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "identity": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('assignmentName')]",
              "location": "[parameters('location')]",
              "properties": {
                "description": "[parameters('description')]",
                "displayName": "[parameters('displayName')]",
                "enforcementMode": "[parameters('enforcementMode')]",
                "nonComplianceMessages": [
                  {
                    "message": "[parameters('nonComplianceMessage')]"
                  }
                ],
                "parameters": "[parameters('parameters')]",
                "policyDefinitionId": "[parameters('policyId')]"
              },
              "identity": {
                "type": "[parameters('identity')]"
              }
            }
          ],
          "outputs": {
            "policyResourceId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('assignmentName'))]"
            },
            "policyPrincipalId": {
              "type": "string",
              "value": "[if(equals(parameters('identity'), 'SystemAssigned'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('assignmentName')), '2020-09-01', 'full').identity.principalId, '')]"
            }
          }
        }
      }
    },
    {
      "condition": "[parameters('requiredTags')[range(0, length(parameters('requiredTags')))[copyIndex()]].inheritTag]",
      "copy": {
        "name": "inheritTagPolicy",
        "count": "[length(range(0, length(parameters('requiredTags'))))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('inheritTag-{0}', replace(parameters('requiredTags')[range(0, length(parameters('requiredTags')))[copyIndex()]].tagname, ' ', ''))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parameters": {
            "value": {
              "tagName": {
                "value": "[parameters('requiredTags')[range(0, length(parameters('requiredTags')))[copyIndex()]].tagname]"
              }
            }
          },
          "policyId": {
            "value": "[variables('inheritTag')]"
          },
          "assignmentName": {
            "value": "[uniqueString(parameters('requiredTags')[range(0, length(parameters('requiredTags')))[copyIndex()]].tagname, managementGroup().id, variables('inheritTag'))]"
          },
          "nonComplianceMessage": {
            "value": "[parameters('requiredTags')[range(0, length(parameters('requiredTags')))[copyIndex()]].tagname]"
          },
          "displayName": {
            "value": "[format('Inherit {0} tag for resources if missing.', parameters('requiredTags')[range(0, length(parameters('requiredTags')))[copyIndex()]].tagname)]"
          },
          "enforcementMode": {
            "value": "Default"
          },
          "description": {
            "value": "[format('Inherit {0} tag for resources if missing.', parameters('requiredTags')[range(0, length(parameters('requiredTags')))[copyIndex()]].tagname)]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "identity": {
            "value": "SystemAssigned"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "11689312794434857792"
            }
          },
          "parameters": {
            "policyId": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[deployment().location]"
            },
            "nonComplianceMessage": {
              "type": "string"
            },
            "assignmentName": {
              "type": "string",
              "maxLength": 24
            },
            "parameters": {
              "type": "object"
            },
            "enforcementMode": {
              "type": "string",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ]
            },
            "identity": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('assignmentName')]",
              "location": "[parameters('location')]",
              "properties": {
                "description": "[parameters('description')]",
                "displayName": "[parameters('displayName')]",
                "enforcementMode": "[parameters('enforcementMode')]",
                "nonComplianceMessages": [
                  {
                    "message": "[parameters('nonComplianceMessage')]"
                  }
                ],
                "parameters": "[parameters('parameters')]",
                "policyDefinitionId": "[parameters('policyId')]"
              },
              "identity": {
                "type": "[parameters('identity')]"
              }
            }
          ],
          "outputs": {
            "policyResourceId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('assignmentName'))]"
            },
            "policyPrincipalId": {
              "type": "string",
              "value": "[if(equals(parameters('identity'), 'SystemAssigned'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('assignmentName')), '2020-09-01', 'full').identity.principalId, '')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "delayForRoleAssignment",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "8796933766984276525"
            }
          },
          "parameters": {
            "time": {
              "type": "string",
              "defaultValue": "[utcNow()]"
            },
            "location": {
              "type": "string",
              "defaultValue": "[deployment().location]"
            }
          },
          "resources": [
            {
              "copy": {
                "name": "delayLoop",
                "count": "[length(range(0, 10))]",
                "mode": "serial",
                "batchSize": 1
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2021-04-01",
              "name": "[format('delay{0}-{1}', range(0, 10)[copyIndex()], parameters('time'))]",
              "location": "[parameters('location')]",
              "properties": {
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {},
                  "resources": [],
                  "outputs": {}
                }
              }
            }
          ]
        }
      }
    },
    {
      "condition": "[parameters('requiredTags')[range(0, length(parameters('requiredTags')))[copyIndex()]].inheritTag]",
      "copy": {
        "name": "assignRole",
        "count": "[length(range(0, length(parameters('requiredTags'))))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('assignRole-{0}', replace(parameters('requiredTags')[range(0, length(parameters('requiredTags')))[copyIndex()]].tagname, ' ', ''))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "roleDefinitionId": {
            "value": "[variables('tagContributor')]"
          },
          "assignmentName": {
            "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('inheritTag-{0}', replace(parameters('requiredTags')[range(0, length(parameters('requiredTags')))[range(0, length(parameters('requiredTags')))[copyIndex()]]].tagname, ' ', '')))).outputs.policyResourceId.value]"
          },
          "principalId": {
            "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('inheritTag-{0}', replace(parameters('requiredTags')[range(0, length(parameters('requiredTags')))[range(0, length(parameters('requiredTags')))[copyIndex()]]].tagname, ' ', '')))).outputs.policyPrincipalId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "8639855409674424355"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "roleDefinitionId": {
              "type": "string"
            },
            "assignmentName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-08-01-preview",
              "name": "[guid(parameters('assignmentName'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "roleDefinitionId": "[parameters('roleDefinitionId')]",
                "principalType": "ServicePrincipal"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', 'delayForRoleAssignment')]",
        "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('inheritTag-{0}', replace(parameters('requiredTags')[range(0, length(parameters('requiredTags')))[range(0, length(parameters('requiredTags')))[copyIndex()]]].tagname, ' ', '')))]",
        "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('inheritTag-{0}', replace(parameters('requiredTags')[range(0, length(parameters('requiredTags')))[range(0, length(parameters('requiredTags')))[copyIndex()]]].tagname, ' ', '')))]"
      ]
    }
  ]
}